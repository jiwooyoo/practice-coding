#include<iostream> 
#include<algorithm>
#include<string>
#include<queue>
#include<vector>
#include<memory.h>
#define INF 987654321
#define MAX 202

using namespace std;   //표준 입출력을 위해

int dx[4] = {-1,0,1,0};
int dy[4] = {0,1,0,-1};
int arr[1002][1002];
bool visited[1002][1002];
int n, m;

void dfs(int x, int y) {
	//visited[x][y] = true;

	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];

		if (nx < 0 || ny < 0 || nx >= n || ny >= m) {
			//cout << "~~~~\n";
		//	cout << nx << " " << ny << "\n";
			continue;
		}
		//cout << "&&&\n";
		if (!visited[nx][ny] && arr[nx][ny] == 0) {
		//	cout << "*\n";
			visited[nx][ny] = true;
			dfs(nx,ny);
		}
	}
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> m;
	
	memset(visited, false, sizeof(visited));
	memset(arr, -1, sizeof(arr));

	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < m; j++) {
			arr[i][j] = s[j] - '0';
			
		}
	}

	int cnt = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (!visited[i][j] && arr[i][j] == 0) {
				visited[i][j] = true;
				dfs(i, j);
				cnt++;
			}
		}
	}

	cout << cnt << "\n";
}