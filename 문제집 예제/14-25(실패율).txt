#include<iostream> 
#include<algorithm>
#include<string>
#include<queue>
#include<stack>
#include<vector>
#include<memory.h>

using namespace std;
int arr[503];
vector<pair<double, int> > v;

bool cmp(pair<double, int> p1, pair<double, int> p2) {
	if (p1.first == p2.first) {
		return p1.second < p2.second;
	}
	
	return p1.first > p2.first;
}

vector<int> solution(int N, vector<int> stages) {
    vector<int> answer;
    memset(arr, 0, sizeof(arr));
    
    for(int i=0;i<stages.size();i++){
        arr[stages[i]]++;
    }
    
    for (int i = 1; i <= N; i++) {
		int sum = 0;
		for (int j = N+1; j >= i; j--) {
			sum += arr[j];
		}
        if(sum==0) v.push_back({0,i});
        else
		    v.push_back({(double)arr[i]/sum,i});
	}
    
    sort(v.begin(), v.end(),cmp);
    for (int i = 0; i < v.size(); i++) {
		//cout << v[i].second << "\n";
        answer.push_back(v[i].second);
	}
    
    return answer;
}